import { useRouter } from 'next/router';
import { signInWithEmailAndPassword } from 'firebase/auth';
import { auth } from '../firebase/firebase';
import { Form } from './Form';
import { useEffect } from 'react';

export const Login = () => {
  console.log('üöÄ –ö–û–ú–ü–û–ù–ï–ù–¢ LOGIN –†–ï–ù–î–ï–†–ò–¢–°–Ø');
  const router = useRouter(); // –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ
  console.log('üöÄ –§–ê–ô–õ LOGIN.JS –ó–ê–ì–†–£–ñ–ï–ù');


  useEffect(() => {
  console.log('üî• Firebase config –ø—Ä–æ–≤–µ—Ä–∫–∞:');
  console.log('API Key:', process.env.NEXT_PUBLIC_FIREBASE_API_KEY ? '–Ω–∞–π–¥–µ–Ω' : '‚ùå –ù–ï –ù–ê–ô–î–ï–ù');
  console.log('Auth Domain:', process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN ? '–Ω–∞–π–¥–µ–Ω' : '‚ùå –ù–ï –ù–ê–ô–î–ï–ù');
  console.log('Auth –æ–±—ä–µ–∫—Ç:', auth ? '–Ω–∞–π–¥–µ–Ω' : '‚ùå –ù–ï –ù–ê–ô–î–ï–ù');
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Firebase
  auth.onAuthStateChanged((user) => {
    if (user) {
      console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω:', user.email);
    } else {
      console.log('üîì –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
    }
  });
}, []);
  
  useEffect(() => {
    console.log('üî• Firebase config –ø—Ä–æ–≤–µ—Ä–∫–∞:');
    console.log('API Key:', process.env.NEXT_PUBLIC_FIREBASE_API_KEY);
    console.log('Auth Domain:', process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN);
    console.log('Auth –æ–±—ä–µ–∫—Ç:', auth);
  }, []);

  const handleLogin = async (email, password) => { // –¥–æ–±–∞–≤–∏–ª async
    try {
      const { user } = await signInWithEmailAndPassword(auth, email, password);
      console.log('‚úÖ Logged in:', user);
      router.push('/'); // –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ
    } catch (err) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞:', err);
      alert('–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: ' + err.message);
    }
  };

  return <Form title="Login" handleClick={handleLogin} />;
  // –æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥...
}


// export const Login = () => {
  
// };